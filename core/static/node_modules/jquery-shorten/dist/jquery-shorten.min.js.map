{"version":3,"sources":["jquery-shorten.es.js"],"names":["global","factory","define","amd","exports","require","mod","jQuery","jqueryShortenEs","this","_jquery","_classCallCheck","instance","Constructor","TypeError","_jquery2","obj","__esModule","default","_interopRequireDefault","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","DEFAULTS","namespace","chars","ellipses","more","less","shorten","element","options","$element","text","expanded","metas","each","data","k","v","re","RegExp","test","toLowerCase","replace","extend","needShorten","_init","value","_this","_prepare","on","addClass","removeClass","_bindEvents","_trigger","eventType","_len","arguments","params","Array","_key","concat","trigger","NAMESPACE$1","onFunction","word","substring","toUpperCase","apply","summaryText","slice","detailText","html","_ellipsesHtml","_toggleHtml","$toggle","find","that","off","prepare"],"mappings":"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","file":"jquery-shorten.min.js","sourcesContent":["/**\n* jQuery shorten v0.3.2\n* https://github.com/amazingSurge/jquery-shorten\n*\n* Copyright (c) amazingSurge\n* Released under the LGPL-3.0 license\n*/\nimport $ from 'jquery';\n\nvar DEFAULTS = {\n  namespace: 'shorten',\n  chars: 100,\n  ellipses: '...',\n  more: 'more',\n  less: 'less'\n};\n\nconst NAMESPACE$1 = 'shorten';\n\n/**\n * Plugin constructor\n **/\nclass shorten {\n  constructor(element, options) {\n    this.element = element;\n    this.$element = $(element);\n    this.text = this.$element.text();\n    this.expanded = false;\n\n    // options\n    const metas = [];\n\n    $.each(this.$element.data(), (k, v) => {\n      const re = new RegExp(\"^shorten\", \"i\");\n      if (re.test(k)) {\n        metas[k.toLowerCase().replace(re, '')] = v;\n      }\n    });\n    this.options = $.extend(true, {}, DEFAULTS, options, metas);\n\n    // Namespacing\n    this.namespace = this.options.namespace;\n\n    if (this.needShorten()) {\n      this._init();\n    }\n  }\n\n\n  _init() {\n    this._prepare();\n\n    // bind event\n    this.$element.on('shorten::expand', () => {\n      this.expanded = true;\n      this.$element.addClass(this.namespace + '_expand');\n    });\n    this.$element.on('shorten::collapse', () => {\n      this.expanded = false;\n      this.$element.removeClass(this.namespace + '_expand');\n    });\n\n    this._bindEvents();\n\n    this._trigger('ready');\n  }\n\n  _trigger(eventType, ...params) {\n    let data = [this].concat(params);\n\n    // event\n    this.$element.trigger(`${NAMESPACE$1}::${eventType}`, data);\n\n    // callback\n    eventType = eventType.replace(/\\b\\w+\\b/g, (word) => {\n      return word.substring(0, 1).toUpperCase() + word.substring(1);\n    });\n    let onFunction = `on${eventType}`;\n\n    if (typeof this.options[onFunction] === 'function') {\n      this.options[onFunction].apply(this, params);\n    }\n  }\n\n  _prepare() {\n    this.summaryText = this.text.slice(0, this.options.chars);\n    this.detailText = this.text.slice(this.summaryText.length);\n\n    this.$element.html(this.summaryText +\n      this._ellipsesHtml() +\n      '<span class=\"' + this.namespace + '-detail\">' + this.detailText + '</span>' +\n      this._toggleHtml()\n    );\n  }\n\n  _ellipsesHtml() {\n    if (this.options.ellipses) {\n      return '<span class=\"' + this.namespace + '-ellipses\">' + this.options.ellipses + '</span>';\n    }\n    return '';\n  }\n\n  _toggleHtml() {\n    var text;\n    if (this.expanded) {\n      text = this.options.less;\n    } else {\n      text = this.options.more;\n    }\n    return '<a class=\"' + this.namespace + '-toggle\" href=\"#\">' + text + '</a>';\n  }\n\n  _bindEvents() {\n    this.$toggle = this.$element.find('.' + this.namespace + '-toggle');\n\n    const that = this;\n    this.$element.on('click.shorten', '.' + this.namespace + '-toggle', function() {\n      if (that.expanded) {\n        that._trigger('collapse');\n        $(this).html(that.options.more);\n      } else {\n        that._trigger('expand');\n        $(this).html(that.options.less);\n      }\n      return false;\n    });\n  }\n\n  needShorten() {\n    if (this.text.length > this.options.chars) {\n      return true;\n    }\n    return false;\n  }\n\n  text() {\n    return this.text;\n  }\n\n  expand() {\n    this._trigger('expand');\n  }\n\n  collapse() {\n    this._trigger('collapse');\n  }\n\n  destroy() {\n    this.$element.html(this.text);\n    this.$element.data('shorten', null);\n    this.$element.off('.shorten');\n    this.$element.off('shorten::expand');\n    this.$element.off('shorten::collapse');\n  }\n\n  update(text) {\n    this.text = text;\n    if (this.needShorten()) {\n      this.prepare();\n    } else {\n      this.$element.html(text);\n    }\n\n    this._trigger('expand', text);\n  }\n\n  static setDefaults(options) {\n    $.extend(DEFAULTS, $.isPlainObject(options) && options);\n  }\n}\n\nvar info = {\n  version:'0.3.2'\n};\n\nconst NAMESPACE = 'shorten';\nconst OtherAsShorten = $.fn.shorten;\n\nconst jQueryShorten = function(options, ...args) {\n  if (typeof options === 'string') {\n    const method = options;\n\n    if (/^_/.test(method)) {\n      return false;\n    } else if ((/^(get)/.test(method))) {\n      const instance = this.first().data(NAMESPACE);\n      if (instance && typeof instance[method] === 'function') {\n        return instance[method](...args);\n      }\n    } else {\n      return this.each(function() {\n        const instance = $.data(this, NAMESPACE);\n        if (instance && typeof instance[method] === 'function') {\n          instance[method](...args);\n        }\n      });\n    }\n  }\n\n  return this.each(function() {\n    if (!$(this).data(NAMESPACE)) {\n      $(this).data(NAMESPACE, new shorten(this, options));\n    }\n  });\n};\n\n$.fn.shorten = jQueryShorten;\n\n$.shorten = $.extend({\n  setDefaults: shorten.setDefaults,\n  noConflict: function() {\n    $.fn.shorten = OtherAsShorten;\n    return jQueryShorten;\n  }\n}, info);\n"]}